[{"authors":null,"categories":null,"content":"RP2040 chip development board with ESP8285 wireless module user guide [ English ] | [ 中文 ]\nRP2040 chip development board with ESP8285 wireless module user guide 1. Preliminary Introduction 1.1 Why not buy another Raspberry Pico W? 1.2 Why is this guide necessary if Arduino can be used without setup? 2. Bringing RP-ESP up to date 2.1 Preparation 2.1.1 Firmware version selection 2.1.2 Flashing tools preparation 2.1.3 Firmware components introduction 2.2 Starting to flash firmware 2.3 Using RP-ESP with Arduino IDE 3. Personal projects 4. Acknowledgments 5. Welcome to ask questions! 1. Preliminary Introduction I previously used a Raspberry Pico W produced by the Raspberry Pi Foundation, but one day I noticed it was not working properly and could not connect to my wireless network. After carefully checking, I found that a small capacitor on the board’s trapezoidal antenna had fallen off. After some effort, I had to give up on this board 😭.\nOn Taobao, the original Raspberry Pico W boards I could find were all priced at over 50 RMB, which seemed too expensive for my development purposes. For that reason, I purchased a board labeled as a Raspberry Pico W clone, which featured a Type-C interface and a less easily damaged built-in antenna design, with a price of around 20 RMB. I was attracted by these features.\nHowever, upon receiving it, I found that this was a Chinese-produced clone board that imitated the Raspberry Pico board design one-for-one, simply replacing the ESP-01 wireless module. As a result, all the code I had written for the original Raspberry Pico W no longer worked because most of the third-party libraries relied on the CYW43439 module. Therefore, I had to modify all my code!\nFortunately, I succeeded, but the process was very tedious. This is why I want to provide this guide for friends who have similar experiences, to reduce unnecessary time spent.\n1.1 Why not buy another Raspberry Pico W? Firstly, this Chinese board is very cheap. Secondly, it meets all my project requirements at less than half the price of an official Raspberry Pico W, and it is equally stable.\nHere’s a comparison between the two boards (RP2040 with ESP8285 development board is abbreviated as RP-ESP, and Raspberry Pico W is abbreviated as Pico W, the same below.):\nDifference Explanation Notes Communication with the wireless module Pico W uses SPI communication, while RP-ESP uses UART0 (GP0、GP1). The wireless speed of RP-ESP is somewhat lower than Pico W because ESP8286 becomes unstable at high baud rates. However, this doesn’t affect basic usage. Wireless module capability CYW43 is superior to ESP8286 in all aspects except price (e.g., supports more access points, more protocols, better UDP support, more power-efficient). RP-ESP is suitable for users who do not require it to act as an access point and have lower network demands. Connection method with the wireless module Communication with the wireless module inevitably occupies some pins of RP2040. In this aspect, RP-ESP has an advantage as it only occupies GP0 and GP1 (UART0’s TX, RX). On Pico W, the built-in LED (LED_BUILTIN) control is handed over to CYW43, meaning only digital signals can be output. RP-ESP retains LED control similar to Pico, allowing both digital and analog signal outputs to the LED_BUILTIN pin. Customization level of the wireless module Pico W only allows control of the wireless module via its driver. RP-ESP can flash any firmware supported by standard ESP8285 boards onto the module. Note: RP-ESP only supports 1MB memory ESP8285 (the common ESP-01 module) firmware, including Arduino support. 1.2 Why is this guide necessary if Arduino can be used without setup? The ESP8285 on RP-ESP comes with AT firmware, which is based on a 2016-vintage AT instruction set (version 1.2), outdated after nearly a decade with many new commands unsupported. More importantly, this old AT firmware only supports the outdated WiFiEsp library, which has many issues and is unsuitable for use, far inferior to Pico W’s built-in Wi-Fi library.\n2. Bringing RP-ESP up to date We need to make some adjustments to ensure that the ESP8285 on RP-ESP meets our basic needs, at least matching 80% of Pico W’s functionality, which is sufficient for my purposes.\n2.1 Preparation Using AT command set ESP-01 (with ESP8285 core) is supported by WiFiEspAT library by @JAndrassy. But to use this library, the AT firmware must be at least version 1.7.\nTherefore, we need to upgrade ESP8285’s AT firmware.\n2.1.1 Firmware version selection Based on tested versions, the only usable and trouble-free version is 1.7.4. Our comparisons are based on this version.\nVersion Differences Download method Officially released AT v1.7.4 firmware \\ Download link available on GitHub, included in SDK v3.0.4. loboris’s ESP8266_AT_LoBo (strongly recommended, this guide is based on it) Modified from official v3.1.0 to improve support for SSL, OTA, etc., adding more AT commands. More details and downloads available on this link. …","date":1744602992,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1744727718,"objectID":"99583335aa0da076c99c2978d52b12a2","permalink":"https://blog.ourdocs.cn/post/rp2040_with_esp8285_arduino_guide/","publishdate":"2025-04-14T11:56:32+08:00","relpermalink":"/post/rp2040_with_esp8285_arduino_guide/","section":"post","summary":"RP2040-ESP8285 Development Board Hands-on Getting Started Guide","tags":["tutorial","English"],"title":"RP2040 chip development board with ESP8285 wireless module user guide","type":"post"},{"authors":null,"categories":null,"content":"带ESP8285无线模块的RP2040芯片开发板使用指南 [ English ] | [ 中文 ]\n带ESP8285无线模块的RP2040芯片开发板使用指南 1. 前情提要 1.1 为什么不再买一块Raspberry Pico W？ 1.2 Arduino无需配置即可使用，为何需要这个指南？ 2. 让RP-ESP跟上时代 2.1 前期准备 2.1.1 固件版本选择 2.1.2 刷写工具准备 2.1.3 固件各部分内容介绍 2.2 开始刷写固件 2.3 配合Arduino IDE使用RP-ESP 3. 个人作品 4. 致谢 5. 欢迎向我提问！ 1. 前情提要 我原本使用的是一块树莓派基金会原产的Raspberry Pico W，但是有一天我突然发现它不能正常工作了，无法连接我的无线网络。经过仔细检查，我发现板子上梯形天线的一个小电容脱落了，经过一番努力，我放弃了这块板子😭。 我在淘宝上能找到的同款板子基本都是50+人民币，对我的开发用途来说有点太贵了，不划算，然后购入了一块标榜着Raspberry Pico W的开发版，商品页我喜欢的Type-C接口以及不太容易损坏的板载天线设计以及20+人民币的价格属实让我心动了。 但我买回来之后发现这只是一块模仿Raspberry Pico板子一比一复刻，并将ESP-01无线模块搬上板子的纯纯中国产产品，所有我以前根据Raspberry Pico W开发板写的代码都不能用了，因为大多数依赖网络链接的第三方库都是根据CYW43439无线模组设计的，所以我的代码不得不全！部！修！改！ 幸运的是，我成功了，但是非常折腾，这也是为何我想为与我有相似经历的朋友们提供这个指南，减少不必要的时间开销。\n1.1 为什么不再买一块Raspberry Pico W？ 首先，这块国产板子非常便宜，其次，它以不到正版一半的价格满足了我项目的全部开发需求，而且同样稳定。 以下是这两块板子的一些情况对比（RP2040 with ESP8285开发板简称 RP-ESP， Raspberry Pico W简称Pico W，下同）：\n差异 说明 备注 与无线模块的通信方式 Pico W以SPI的方式通信，而RP-ESP以UART0（GP0、GP1）与无线模块通信 RP-ESP的无线速率较Pico W会更低一些，因为ESP8286在高速波特率通信速率下会不稳定，但不影响基本使用 无线模块的能力 CYW43是一块全方位领先ESP8286的芯片（除了价格），比如支持更多的无线接入点数量、更多的协议、更完善的UDP支持、更加省电等等 RP-ESP适合那些不需要将它作为无线接入点，对网络要求没有那么高的用户 与无线模块的连接方式 与无线模块通信不可避免的会占用一些RP2040的引脚，在这个方面RP-ESP更有优势，因为它占用的引脚比Pico W更少，仅为UART0的TX、RX两个引脚（GP0，GP1）。 在Pico W上，板载LED（LED_BUILTIN）的控制交给了CYW43，所以只能输出数字信号；而RP-ESP的控制与Pico如出一辙，都可以对LED_BUILTIN引脚输出数字和模拟信号，这就意味着我们可以让板载LED闪烁或者渐变。 无线模块的可定制程度 Pico W只允许以驱动提供的方式控制无线模块，而RP-ESP可以直接对ESP8285刷入任意普通ESP8285开发板支持的固件。 需要注意的是，RP-ESP仅支持为1MB存储的ESP8285（即我们常见的ESP-01模组）开发的固件，当然也可以支持Arduino。 1.2 Arduino无需配置即可使用，为何需要这个指南？ RP-ESP这块板的ESP8285自带的是AT固件，AT指令集的版本是是停留在2016年推出的1.2版本，这是近10年前推出的系统，很多新的AT指令集都不支持，已经严重过时了。 更重要的是，这个旧版的AT固件只支持已经6年未更新过的WiFiEsp库，现今这个库已经出现了很多问题，不再适合使用了，和Pico W自带的无线网络库没有可比性。\n2. 让RP-ESP跟上时代 我们需要做一些工作，来让RP-ESP的ESP8285能够满足我们的基本需求，至少达到Pico-W 80%的可用性，这对我来说已经足够了。\n2.1 前期准备 使用AT指令的ESP-01（即搭载ESP8285核心的模块）无线模块在Arduino中并非没有支持，我十分推荐@JAndrassy的WiFiEspAT库，但要使用这个库至少需要AT固件的版本大于1.7。 因此，我们需要升级ESP8285的AT固件。\n2.1.1 固件版本选择 ESP8285/ESP8266目前经测试唯一可以使用且不会出现任何问题的版本号是1.7.4，因此我们的对比都从这个版本出发。\n版本 差异 下载方式 官方推出的AT v1.7.4固件 \\ 官网已经去除了肉眼可见的下载按钮，但还是可以通过GitHub的链接下载，AT 1.7.4固件被包含在是3.0.4版本的包中。 @loboris的ESP8266_AT_LoBo（强烈推荐，本文也基于它说明） 基于官方3.1.0的版本修改而来，对SSL、OTA等功能的支持更好，还增加了更多的AT指令。 详细的改进和下载都可以通过这个链接找到。 @JiriBilek的ESP_ATMod 较官方版本增加了对TLS 1.2的支持，但同时也去除了对UDP的支持。 详细的差异和下载可以通过这个链接查到 2.1.2 刷写工具准备 我们有两种工具可以选择，均为官方出品。\n官方推出的全平台（支持Windows、Linux、macOS）命令行刷写工具esptool。 官方推出的图形化应用程序（仅支持Windows），可直接点击链接下载。 本着方便小白用户的原则，本文主要以第二种工具来做介绍。 2.1.3 固件各部分内容介绍 以下表格文件名称均以ESP8266_AT_LoBo\\bin目录下的为例：\n名称 作用 刷写地址 bootloader.bin 引导系统启动 0x00000 upgrade\\esp8266_AT_1_2.bin 系统第一部分 0x01000 blank.bin 空 0x7e000 upgrade\\esp8266_AT_2_2.bin 系统第二部分 0x81000 esp_init_data_default_v08.bin 系统初始数据 0xfc000 blank.bin 空 0xfe000 2.2 开始刷写固件 第一步：打开软件，在弹出的窗口选择esp8285，然后点击OK: 第二步：下载Serial_port_transmission.uf2，断开RP-ESP板电源，长按下图红色框中的BOOTSEL按钮，再插上线连接至电脑，将下载好的Serial_port_transmission.uf2拖入新出现的磁盘中（一般叫做RPI-RP2），此时磁盘会自动断开，新的名为TinyUSB的串口设备将会出现在电脑中。 此时再次断开设备与电脑的连接和供电，按住下图黄色框中的BOOT按钮，再次连接电脑，此时的ESP8285将会进入可刷入状态，此时可以通过软件刷写固件，甚至是Arduino的sketch（因为其底层也是使用esptool）。 第三步：按照下图所示信息配置好软件，特别是选好右下角COM:中你RP-ESP板子对应的串口：: 如果觉得一个个配置固件地址太过麻烦，仓库中还提供了合并包供大家选择，一共有两个版本：ESP8285_1MB_1.7.4_AT.bin是官方固件，ESP8285_1MB_1.7.4_AT_Lobo.bin是ESP8266_AT_LoBo固件，强烈推荐使用后者刷入。 如果选择使用一体包刷入，请按照下图配置： 第四步：点击START按钮，等待刷写结束后，断开RP-ESP板电源后，再次连接电脑，此时任意选择一个串口助手软件，打开RP-ESP对应的串口，输入AT指令（以\\r\\n字符做结尾），你可以看到ESP8285返回的OK响应，输入AT+GMR，将可以看到返回的版本信息中显示系统为1.7.4。 2.3 配合Arduino IDE使用RP-ESP 使用Arduino写入RaspberryPi Pico的sketch，我推荐@earlephilhower的arduino-pico开发套件，不建议使用Arduino官方的Arduino Mbed OS RP2040 Boards，因为比起前者，后者要少许多功能和开发样例。 在Arduino IDE中点击上传后，下方的输出会卡在Scanning for RP2040 devices，此时断开RP-ESP板子和电脑的连接，按住2.2 开始刷写固件中第二步中红色框选的BOOTSEL按钮，再插上线连接至电脑，此时Arduino IDE将会写入sketch至RP-ESP板子看到类似Wrote xxxxxx bytes to /Volumes/RPI-RP2/NEW.UF2字样即为成功。 配合WiFiEspAT库使用时，务必记得设置Serial1的TX\\RX为GP0\\GP1，否则可能会出现找不到Wi-Fi模块的错误。与此同时，如果要用到WiFi.sntp()相关功能，务必使用ESP8266_AT_LoBo固件。 3. 个人作品 将Pico W专用的库替换后，最终的个人作品——一个可调节颜色、亮度的南瓜灯和一个可以显示日期时间、室内环境数据的小摆件，成功复活！一切都和使用Pico W时一样！ 4. 致谢 @JAndrassy的WiFiEspAT @loboris的ESP8266_AT_LoBo @JiriBilek的ESP_ATMod @earlephilhower的arduino-pico 5. 欢迎向我提问！ 如果有其他疑问，欢迎提出issue！\n","date":1744602992,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1744727718,"objectID":"fb5fcd95f19a0662778a040ae5e58e4e","permalink":"https://blog.ourdocs.cn/post/rp2040_with_esp8285_arduino_guidechinese/","publishdate":"2025-04-14T11:56:32+08:00","relpermalink":"/post/rp2040_with_esp8285_arduino_guidechinese/","section":"post","summary":"RP2040-ESP8285开发板手把手入门指南","tags":["tutorial","Chinese"],"title":"带ESP8285无线模块的RP2040芯片开发板使用指南","type":"post"},{"authors":null,"categories":null,"content":" Part of this article is encrypted with password:\nJavascript needs to be enabled to decrypt content 又是摸鱼的一天,恢复写日志啦 今天没有复习，感觉看书看不进去。\n帮着别人改了点程序，因为都是自己舒适区里的东西，没啥成就感。\n实习验收结束了，老师说电赛获奖的话本来是可以免修的，但同时也说我们这个比赛应该也可以免修，不知道他什么意思，虽然小车和密码系统设计都是满分15分，但报告是大头，有40呢，还是得好好写。\n高中的iPod shuffle\n前一段时间专门为高中时候的iPod shuffle买了AirPods Max的转接线，花了100多，都快赶得上它本身的价值的一半了。不过这是一件非常重要的礼物，我不想让它一直落灰，100多也值得。\n这段时间获奖之后确实很高兴，也给我增加了很多的自信。但我感觉自己有些飘了，认为自己在其他不擅长的地方，比如国考上也能保持优势了。还是要有一颗平常心，这次能得这么好的奖，运气因素还是很大的，无论是时间推迟还是选题是做系统都一样，这个比赛以前学校就有人能拿一等奖，还是没必要因此骄傲，谦受益满招损，现在最主要的工作是学习国考，特别是国考并不是我最喜欢的事物，没有发自内心的热爱加成，可能要多费些心思才可以。\n想要做的事情有很多，国考复习，考研数学我也想看一下，因为还报名了数学竞赛。这些天玩的游戏、看的小说都该停一停了，明天完成实习报告后，就好好复习国考吧，即便我不热爱，也要培养出热爱才行。\n有了稳定的工作才能更好地支持我的兴趣爱好，若是工作的不开心，就去考个研吧！\n每隔一段时间还是要好好总结一下，想到啥就说啥吧。近些天同学们的一些吹捧属实让我感到不安了，因为我怕我飘了，无论他们是不是真心的，我都不应该放在心上，也不应该摆出一副自己很厉害的样子，因为我也不是什么权威，只是比他们早接触一些罢了，没啥值得骄傲的，大家努力的方向不同，鄙视链没有存在的必要。\n保持道心通透还是很重要的，我的心里不会有不值得存在的人或事，专心去做正确的事吧，保持谦逊，过去的已经是过去了，永远要看向未来。\n","date":1631750400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1744727718,"objectID":"1cc180418ddd6b1c7ba64544aac5810a","permalink":"https://blog.ourdocs.cn/post/log_2021_9_16/","publishdate":"2021-09-16T00:00:00Z","relpermalink":"/post/log_2021_9_16/","section":"post","summary":"又是摸鱼的一天","tags":["diaries","private"],"title":"日志-2021.9.16","type":"post"},{"authors":null,"categories":null,"content":" Part of this article is encrypted with password:\nJavascript needs to be enabled to decrypt content 一、引子 上星期六（7.25）遇见一件烦心事。\n起因是我在家待得太无聊，于是就想出门找人玩耍、聊聊天啥的，本来想去西安旅游，看看风景，但是最后担心疫情还是没能成行。\n行吧，外省去不了我省内玩玩总行了吧？\n既然是省内找乐子，就最好找个能有点大城市气息的，比如说泉州、厦门。\n厦门没亲戚，认识的同学也是塑料，所以当然是不去了。\n泉州似乎是个很好的选择——有个亲戚很久没去拜访，萧国林这个傻子也在泉州，并且“盛情邀请”。\n贴图证明一下，免得几年后回翻帖子的我看不见： 口花花的渣男言论\n渣男言论\n渣男言论\n渣男言论\n这时候还很积极\n既然我也想去，也有熟人，应当可以好好玩一把⑧？\n天真的我就是这么想的，然后我就拉上我妈兴高采烈地去了：她去走亲戚，我去玩耍。\n到泉州之后，我才感觉有一丝不太对劲。\n首先是我到达后发消息给萧国林，他几小时之后才回复，这对于他这个手机不离手的人来说是很不正常的，况且他现在在自己家，不在厂里，而且还是假期。\n行吧，我权当是偶然没看见，回复了就行： 开始不对劲了\n接下来就开始约时间，原本是两点，后来他说都有空我就说上午： 鸽子行为的根源\n本来他作为东道主，应该是由他想好玩啥，然后推荐我去，结果他说他对这边不熟，那行，我说去他那里，我和他说我不知道路线，接着他又说还是他来我这里，最后就不了了之，完全没计划好，我开始心里有点不爽了。\n接下来他快到一点也没有睡，而我2点才看到消息，所以没有回复： 我开始试探他到底来不来了\n快十一点还没任何消息和电话，我开始觉着不妙了。\n我中间8点醒了一下，没收到任何消息，于是就接着睡了，10点多起来也没等到，发消息也不回，等到11点多就开始生气了。\n于是我发了朋友圈（图片没有保存）。\n然后他老人家1点多才回复我的消息： 开始演戏\n2点才醒可能吗？？？？？就算你1点半才睡，12个小时你是猪吗？ 我已经心怀怒火\n于是我开始内涵他，下次丕定=下次不一定，他搬出爸妈只会让我觉着这是在找借口，嘴上说的越冠冕堂皇，我越生气，全都是借口。\n我本以为他看到了我发的朋友圈，能够感到羞愧，于是我在他回复我的时候就删除朋友圈了，结果他给我装单纯，我一肚子火忍到晚上，实在忍不住了，看这傻叉还没有领会，只能比较委婉，稍微直白点的发消息骂他： 演，继续演\n借口来了——“没看见。”\n你说JB呢？没看见？那条消息后面还有几十条消息，都是鬼和我聊天是吗？ 是个人都不会信好吗？\n一点都没睡，至于中午两点才起？\n接着说反话讽刺他，我绝对不会把这个当做误会，细节说明一切！有点=非常\n我对他太了解了，他熬夜再迟，也不会在第二天10点之后起床！\n综上所述：这就全TM是借口！\n既然都是借口，为啥要假装那么热情？\n放别人鸽子，浪费别人感情这么爽？我平时不够照顾他吗？\n二、回顾 我和萧国林认识，是大二上学期开学前的暑假。\n那一天不知道是谁把我的QQ推给他，我就通过好友申请，和他聊了一会儿学校的事情，当时他是以洗澡为由结束的话题。\n那天聊的是挺多的，他若是不想聊，找这个借口结束话题我觉着没有问题，况且那时候已经11点多，按照他的习惯确实应该在洗澡了，这应该不是借口。（我现在对他已经几乎没有信任了，所以他的很多行为我都认为是借口。）\n我当时是第一次当学长，我心里想的是：“如果能在自己的帮助下，培养出一个和自己志趣相投的学弟，接下来的大学四年应该就有人和我有共同话题，就不会感到孤独了。”\n于是我很上心，很热情。在开学前提出可以带他先看看校园，结果他婉拒了。\n开学那天是我领着他们一家去宿舍的，我领着他们一路逛，还领着去缴交费，路上也说了很多，仿佛恨不得他全都知道。结果交费的时候他有些不耐烦，他说平时他父母现在已经发消息催他了，怎么今天还没有发。听到这里我就知道他的意思是想快点结束去找他爸妈。\n其实那时候我心里就有点一把热情火被浇灭的感觉了，不过在寻找同伴的动力支持下，我还是选择继续做我想做的，我想看看他到底是不是我想要寻找的那种人。\n之后我就将他带回他自己的宿舍，告诉他有事微信找我就行。他们家是做伞的，临走还送了我一把伞，但其实我并不想要。\n之后的几个月里我时常有找他聊天，说学校的事，关心他军训的事，给他送药，送冰凉贴，送金嗓子等等。\n我冒着他舍友异样的眼光（反正我是这样看的），结果换来一句关于是不是gay的灵魂发问，我当下心就拔凉拔凉的。\n之后压垮骆驼的最后一根稻草，就是让我放弃对他的希望的最后一件事，就是他在计算机方面完全不上心。我让他自学C语言，我当时还想带他做项目，打ACM，结果他搞得和狗屎一样，完全就是没有用心的样子，而这学期他C学的还不错正好证明当时他完全没有用心，这让我完全放弃了对他的期望——他不可能是和我志同道合的朋友。\n我觉着还有一件事不得不提。我当时向着接触久了就能知道他是一个怎样的人，于是提出要不国庆一起坐高铁回去，我还特意选择了一班我一点也不顺路，但他顺路的高铁，在路上就相当于长辈一样关心他会不会走丢，会不会冷，是否有安全到家，这些都是一个有正常教养的人会做的事情，但我觉得这煞笔又误会了。\n我本想着还是做一个普通朋友吧，作为学长期末关心一下他的学业，给选课提点意见，送点书和资料就完了。我也确实是这样做的。\n但上周六发生的这件事真的让我感觉我付出的好心全成了驴肝肺，现在我不想和他有任何关系。\n三、结尾 我是一个想社交但又不怎么会社交的的轻微社交恐惧症患者，所以我的一些社交手段难免会被人误会，有些误会真的很扎心。\n我在社交过程中往往不是强势的一方，像个包子一样，任劳任怨，一些苦闷的东西只能埋在心里，但是我不想再做一个谁都能欺负的包子了！\n那些不值得我好好对待的人不配！\n我要把自己的耐心和友善留给值得的人！\n至于其他的人，只不过是生命中的过客，完全无关紧要，4年过后还能有交集的会剩下几个呢？\n我这次写的东西完全没有用上写作的手法和技巧，我只是想记录我当时的心情，给未来的我一个重温回忆的机会。\n从过去的事情中汲取教训，修正自己，变得更加优秀，这是我一直希望，并且坚持努力去做的事。\n","date":1595894400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1744727718,"objectID":"36a84e66f1411520a939bf1fdfe72ef5","permalink":"https://blog.ourdocs.cn/post/log_past_skeletons_in_the_closet/","publishdate":"2020-07-28T00:00:00Z","relpermalink":"/post/log_past_skeletons_in_the_closet/","section":"post","summary":"一段黑历史，也是来时路","tags":["diaries","private"],"title":"日志-过去的黑历史","type":"post"},{"authors":null,"categories":null,"content":"众所周知，GitHub时常处于存在或是不存在的薛定谔状态之中，若是自己的代码托管在上面，在紧急情况时，必须使用魔法才能够获得。\n显而易见的是，不是每个人都是魔法师。所以，若是有一个能够存储自己的代码，并且不会失联的托管网站就好了。\n在国内规模比较大的代码托管网站是Gitee，但对于我们这种只想将自己的代码托管在网站上，而不指望有人fork的小透明来说，搭建一个属于自己的代码托管服务显然是最好的。\n比较知名的开源托管服务有：GitLab，Gitea，Gogs等。\nGitLab是功能最多，体量最庞大的。它至少需要4G的内存来支撑运行。但对于我们个人或是3-5人的小团队来说，冗杂而无必要的功能只会增加不必要的开销。\n这是一张服务对比图，来自Gitea官网\nGogs和Gitea就不一样了，它们是基于Go语言的轻量级托管服务，甚至可以在资源有限的树莓派Zero等低端微型电脑上流畅运行（当然，处理时间会比高级的要长一些。）\nGitea在Gogs的基础上增加了许多很有必要的功能，如GPG签名提交等。但是内存占用量与Gogs相比差距较大，据我的测试，在树莓派上，Gogs会占用20-30M的运存，而Gitea占用100-200M内存，所以我不建议树莓派1、2、Zero等内存在1G以下的设备安装Gitea。\n根据标题，我这一篇文章主要讲树莓派4B安装Gitea。至于树莓派Zero安装Gogs是另外一篇文章。\n一、前期准备工作 1.首先要更新树莓派上的源和软件。\nsudo apt update //更新源 sudo apt upgrade //升级软件包 2.安装依赖\nsudo apt install mariadb-server git unzip 3.完成MySQL的安装（使用安全安装）\nsudo mysql_secure_installation 在这一过程中会设置root用户的密码，这个要妥善保存，因为其他要使用MySQL服务的应用都可能要使用它。\n4.进入MySQL命令行界面\nsudo mysql -u root -p 之后你需要输入安装时设置的root用户密码。\n5.创建gitea数据库\nCREATE DATABASE gitea; 6.为了其他数据库安全起见，我们创建一个专门用来管理gitea数据库的用户\nGRANT ALL PRIVILEGES ON gogs.* TO \u0026#39;用户名\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;密码\u0026#39;; 7.刷新特权表\nFLUSH PRIVILEGES; 8.接下来可以用ctrl+d或者输入exit来退出MySQL命令行模式\n9.与数据库类似，为了系统的安全，我们专门创建一个用于处理git相关事务的账户，用“ -disabled-login ”参数确保它不可作为登录的账户\nsudo adduser --disabled-login git 我在此将之命名为git，但你也可以选择其他的命名方式，不过鉴于Gitea等配置时默认都是这个名字，还是建议不要改。\n网图，我自己实现时并未截图。\n二、开始安装Gitea 1.树莓派使用的Raspberry Pi OS属于Debian的一个分支，因此它属于Linux系统。而Gitea并没有针对Linux的独立安装包，因此我们只能通过二进制文件来安装。\ncd /home/git sudo wget https://dl.gitea.io/gitea/1.12.2/gitea-1.12.2-linux-arm64 -O gitea 现在我们已经将名为gitea的二进制文件下载到git用户对应的个人文件夹下了，下载链接会随时间或是系统而变化。我使用的是树莓派官方的测试版64位系统，因此要下载arm64版本，如果是正式版或是不同架构的设备，那就应该按照自己的情况选择对应的版本。附上下载地址。\n2.接下来我们对它赋予可执行权限\nsudo chmod +x gitea 之后我们就可以直接运行来测试一下了。\n./gitea web 测试完可以直接ctrl+c终止运行来退出。\n3.如果我们不想每次关掉命令行窗口服务都会中断，我们必须将之配置为service\n有两种方式可以做到，本文只介绍其中的systemd方式，而另一种supervisor，请看官方文档。\n首先，我们要在指定目录为它创建系统服务文件\nsudo nano /etc/systemd/system/gitea.service 我在此使用的是nano，因为其操作简单，当然使用vim也是没问题的。\n之后我们需要将官方的示例代码粘贴进去，并作出修改。\n如果你按照之前的步骤配置，那么示例代码中仅有以下部分是必要的：\n[Unit] Description=Gitea (Git with a cup of tea) After=syslog.target After=network.target [Service] # Modify these two values and uncomment them if you have # repos with lots of files and get an HTTP error 500 because # of that ### #LimitMEMLOCK=infinity #LimitNOFILE=65535 RestartSec=2s Type=simple User=git Group=git WorkingDirectory=/home/pi/gitea/ //工作目录，配置在gitea文件所在的目录即可 # If using Unix socket: tells systemd to create the /run/gitea folder, which will contain the gitea.sock file # (manually creating /run/gitea doesn\u0026#39;t work, because it would not persist across reboots) #RuntimeDirectory=gitea ExecStart=/home/pi/gitea web --config /home/pi/custom/conf/app.ini //配置文件位于工作目录下的custom/conf文件夹中 Restart=always Environment=USER=git HOME=/home/git GITEA_WORK_DIR=/home/pi/ //按照工作目录配置 # If you want to bind Gitea to a port below 1024, uncomment # the two values below, or use socket activation to pass Gitea its ports as above ### #CapabilityBoundingSet=CAP_NET_BIND_SERVICE #AmbientCapabilities=CAP_NET_BIND_SERVICE ### [Install] WantedBy=multi-user.target 配置完成后，保存退出，运行以下命令将服务加载，并启动。\nsudo systemctl daemon-reload sudo systemctl start gitea 如果想要开机自启，还必须运行以下命令：\nsudo systemctl enable gitea 到此为止，安装完成。\n三、配置Gitea 1.访问你服务器所在IP地址的3000端口就会进入主界面，地址格式如下：\nhttp://\u0026lt;IP地址\u0026gt;:3000 界面如上图所示\n2.接下来点击Sign In，第一次安装会跳转至配置界面\n如上图所示\n数据库类型我们选择MySQL，用户名和密码按照我们之前的配置，使用我们专属的giteauser即可。\n域名和应用URL，如果有域名可以直接填写，没有的话可以稍后运行以下命令，编辑文件来配置：\nsudo nano /home/git/custom/conf/app.ini 电子邮箱设置需要注意的是STMP服务器地址要带端口号，如：\nstmp.qq.com:465 管理员账号不是必须的，因为系统会将创建的第一个账户默认为管理员。\n可选设置可以按需要配置，如avatar等相关设置在国内就是无效的，需要魔法才能使用。\n点击立刻安装，根据设备情况会花费不同时间，最后会看到以下界面，代表安装成功。\n四、反向代理 我们会发现如果按照上述步骤做完，是不能直接通过域名访问Gitea网站的，因此我们需要做反向代理，通过Nginx或是Apache等反向代理服务来实现直接通过域名访问。\n本文只介绍Nginx，Apache相关请看官方文档。\nNginx的反向代理官网上解释得很详细，本文只补充HTTPS相关内容。\n要配置HTTPS，有两种方式，一种是在gitea的app.ini中，按照下图指示来配置：\n我们需要在文件中设置：\nPROTOCOL = https CERT_FILE = /你的/证书/文件/地址/路径 KEY_FILE = /你的/私钥/文件/地址/路径 在此之后，需要在反向代理中将：\nproxy_pass http://localhost:3000; 修改为：\nproxy_pass https://localhost:3000; 以上是第一种方法，第二种方法是在Nginx配置文件中配置，下面给出一个配置样例：\nserver { //将http全部重定向为https listen 80; listen [::]:80; server_name git.ourdocs.cn; location / { rewrite ^(.*)$ https://$host$1 permanent; } } server { # SSL configuration # listen 443 ssl; listen [::]:443 ssl; ssl_certificate /home/pi/Csr/*.ourdocs.cn_chain.crt; ssl_certificate_key /home/pi/Csr/*.ourdocs.cn_key.key; ssl_session_timeout 5m; #请按照以下协议配置 ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。 ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; ssl_prefer_server_ciphers on; server_name git.ourdocs.cn; location / { proxy_pass http://localhost:3000; } } 修改完配置文件后，使用下述代码使Nginx重新加载：\nsudo nginx -s reload 本教程到此结束，附上安装完成后的截图一张：\n","date":1594771200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1744727718,"objectID":"5c107172a14968ed5bd86d5cec747076","permalink":"https://blog.ourdocs.cn/post/gitea_on_raspberrypichinese/","publishdate":"2020-07-15T00:00:00Z","relpermalink":"/post/gitea_on_raspberrypichinese/","section":"post","summary":"从零开始在树莓派上搭建自己的代码托管服务","tags":["tutorial","Chinese"],"title":"树莓派搭建私有代码托管服务（Gitea）","type":"post"},{"authors":null,"categories":null,"content":" Part of this article is encrypted with password:\nJavascript needs to be enabled to decrypt content 2020.5.21\n“幸福不是你到达的车站，而是一种旅行的方式。”\n——玛格丽特李伦贝克\n今天总的来说过得还算愉快。\n虽说上午信息安全概论我又翻车了。\n信息安全概论我没有课前复习，上午还有点打瞌睡，有些问题没有很快的回答上来，不如以前积极，有点担心平时分，所以到前几分钟还有些焦虑。\n但是现在自己好好想了一下，读书是为了自己的，不是为了做给别人看的，同时呢，马后炮是最轻松的，在当时确实做不出来那也没办法，只有发现自己的缺陷，完善它，才能够减少这种情况出现的次数，懊恼是没有用的。\n今天上午用了课间和中午吃饭前的时间把以前欠下的信号与系统作业做完了，下午老师就说要收，不得不说这真是一个巧合，不过我不用补作业了，挺开心的。\n感觉最近自己做作业和听课的时候有些心不在焉，没有进入状态，可能是自己精力不足吧。快期末了，要早早睡了，调整好心态，不能忘记自己学习的初心，也不能太看重结果，努力去做吧，管别人的目光干啥呢？认认真真复习，认认真真听课、做作业，不争第一，第二啥的，只求问心无愧，做到当时的最好就行了。事后的马后炮除了让自己心情更糟糕没有其它的用处。事后的复盘能够让自己明白缺陷在哪，要如何改进。区分复盘和马后炮是很重要的，差异就在于是否会觉得只要那是怎样怎样就好了啥的，这是没用的，不用为已经发生的事情而感到后悔，随他去吧，向前看。\n今晚因为没有第二天要做的作业，所以没有学习，都在忙着搞新到手的树莓派Zero了，但实际上我应该缩短一些搞兴趣爱好的时间，我最近对于兴趣爱好的焦虑是因为它占用了我太多的时间和精力，这确实应该好好控制、规划一下了，毕竟过去我今晚是要稍微复习一下明天的内容，为可能的测试做准备的。\n接下来稍微写一下新到手的树莓派Zero，这个口香糖大小的单板机我买来是打算暑假研究BadUSB以及做以后开学时的博客备份的，我得时刻铭记不要在不合适的时间做不合适的事，比如在临近期末花太多时间搞这些兴趣爱好，大一下学期的经历就已经告诉我哪怕平时再认真，期末复习不认真，就都是竹篮打水一场空。\n附几张今晚的成果，因为要把重心重新转回学习就不详细写这些爱好的内容了，等假期的时候再补吧。\n组装好的树莓派Zero–通过USB与主机共享网络\n做好的备份网站，只有将树莓派插入电脑才能够访问\n树莓派Zero的资源确实少了点，内存快炸了，还好用了虚拟内存做缓冲\n这个配置搞了我好久，查了一堆资料才搞好，不配置好不能共享网络，设定通过USB共享网络之后不知怎的WiFi不能用了，假期再思考吧。\n","date":1590019200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1744727718,"objectID":"16a763544352543692f71649ab836fd2","permalink":"https://blog.ourdocs.cn/post/log_2020_5_21/","publishdate":"2020-05-21T00:00:00Z","relpermalink":"/post/log_2020_5_21/","section":"post","summary":"第三篇日志","tags":["diaries","private"],"title":"日志-2020.5.21","type":"post"},{"authors":null,"categories":null,"content":" Part of this article is encrypted with password:\nJavascript needs to be enabled to decrypt content 2020.5.19\n“抱最大希望，尽最大努力，做最坏打算，持最好心态，记住该记住的，忘记该忘记的，改变能改变的，接受成事实的，太阳总是新的，每天都是美好的日子。”\n久违的第二篇日志。\n写于2020.5.20凌晨。\n我本不该再写的，但我觉得我必须要保持一些好习惯，也可能是因为今晚没做多少正经事。\n今天我们的微课视频得了二等奖，真是出乎意料，我本以为的三等奖就很好了，意外惊喜，挺知足的。\n今天写了三篇辩论回复，自我感觉还可以，就是不知道别人会怎么回。\n今天晚上除了写第三篇辩论回复就没干其他正经事了，真的不能再给自己找借口了，越到晚上越精神越想做作业不是一个好习惯，至少对于我来说是这样的，我的体质不允许我在12点后睡觉，这样我的大脑第二天运转会很迟缓。\n明天，也就是今天，一定要早睡+认真做正事，毕竟一个上午+半个下午没课。\n今天晚上给博客搭建了一个CDN用来储存静态数据，现在速度快多了，接下来博客就不用我操心了，要专心于学习的事啦。毕竟期末到了。\n还不知道要不要返校，哎，有点忐忑，不想回学校，因为舍友+床，但是又希望返校，因为在学校考试更公平，在网上考试总是能让人做到弊。\n今天就写这么多，12:44了，该睡了。\n做一件事的最好的时候是刚开始时，又或者是现在。\n","date":1589846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1744727718,"objectID":"cbab4b4b3e675ad64bd86fc87b2615d6","permalink":"https://blog.ourdocs.cn/post/log_2020_5_19/","publishdate":"2020-05-19T00:00:00Z","relpermalink":"/post/log_2020_5_19/","section":"post","summary":"第二篇日志","tags":["diaries","private"],"title":"日志-2020.5.19","type":"post"},{"authors":null,"categories":null,"content":" Part of this article is encrypted with password:\nJavascript needs to be enabled to decrypt content 2020.5.11\n当你做什么都于事无补时，唯一能做的，就是努力让自己好过一点，丢都丢了，就别再哭了。\n这篇日志是在5.12补的，是建站以来的第一篇。\n以前从来没有认认真真的写过博客，现在树莓派到手了反而能静下心来写一写了，毕竟数据连着服务器都是自己的，挺有成就感。\n本周是树莓派到手的第四周了。我买树莓派的本意是受知乎的影响，上面的大佬那树莓派做了很多好玩的事：搭建服务器，安排个人博客等。当时正好是在家中无聊的时候，因为当时作业还比较少，正好想做的大创项目和单片机有关，就想买个树莓派上手试试。\n我有个很奇怪的习惯，我一旦开始做自己喜欢的事情就会忘我，就会全身心投入，做事情的时候不觉得累，但是做完了就感觉全身疲惫不堪，感觉被透支了。\n现在的我感觉就是这样，上个星期把树莓派折腾坏了，来来回回搞了很久才修好，以前去博客的数据都丢了（xiix写了那么多）。修好了服务器之后，我现在什么事都不想干，不知道是心累还是身体累。虽然是这样感觉的，但我打算休息一下午之后晚上一定要干活，避免给自己的懒惰找借口。\n本来老早就买了OLED屏幕，但是上次接上电源也不知道怎么回事，不启动，还以为是焊接的叔叔虚焊了，后来才发现是屏幕不知怎么的碎了，碎屏怎么可能会亮🌚，帮我焊的叔叔做了十几年家电维修了，也难怪会不高兴我质疑虚焊。\n和商家扯皮了好久之后他才提出给我重发一个（第一次交涉的客服态度真差，看了也不回复），过了五天还没发货，去催了另一个客服才说是上一个忘了发货了（估计被开除了8⃣️），不过新屏幕5.11总算到了。\n上次帮我焊的叔叔给了我电烙铁，焊锡丝，松香，所以我干脆自己焊。第一次焊发现自己的手一年没焊生了，焊点很粗大，很丑，焊完发现很丑，可能有虚焊，所以第二次有重新融化焊点又焊了一次，漂亮多了。\n树莓派原本的I2C接口是要使用BCM3接口的，但是我已经把硬件开关接上去了。我百度了一下发现树莓派可以用其他端口来模拟I2C，所以就顺理成章地把屏幕接上模拟端口去咯。\n刚开始屏幕接通电源没有亮，我还以为屏幕又是坏的，后来用命令扫描了一下端口，发现显示了正常的地址，这块屏幕是正常的！不过也对，在没有显示的时候，OLED本来也不会亮，因为它是自发光的，不像LCD有背光。\n于是就有了下面几张图👇：\nOLED 显示树莓派信息\n树莓派OLED显示图形+文字\nOLED显示肥宅快乐猫\n用的是Python的Adafruit库，没啥要改的，都是作者写好的example，改改bus就能用了。\n昨天没怎么写作业，不知咋的很累，书也不想看，本来买了Kindle之后又找回了十年前的感觉来着。\n可能是学期上到一半有些怠惰，也可能是前几天搞树莓派太累了，也或者两者皆有之。\n反正稍微休息一下就去干活吧，不能给自己找借口。\n大概就是这样。\n","date":1589241600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1744727718,"objectID":"cbd345abe093b1bdb0b1b8cebc864031","permalink":"https://blog.ourdocs.cn/post/log_2020_5_11/","publishdate":"2020-05-12T00:00:00Z","relpermalink":"/post/log_2020_5_11/","section":"post","summary":"第一篇日志","tags":["diaries","private"],"title":"日志-2020.5.11","type":"post"}]